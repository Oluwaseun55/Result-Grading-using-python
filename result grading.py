# -*- coding: utf-8 -*-
"""Copy of firstassignment.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BnbnTz3WVnBOH3lNRNofOOAJgVny6WPp
"""

# pip install gradio

import gradio as gr

# WAEC grading logic (nested if)
def get_grade(score):
    if 0 <= score <= 100:
        if score >= 75:
            return "A1"
        else:
            if score >= 70:
                return "B2"
            else:
                if score >= 65:
                    return "B3"
                else:
                    if score >= 60:
                        return "C4"
                    else:
                        if score >= 55:
                            return "C5"
                        else:
                            if score >= 50:
                                return "C6"
                            else:
                                if score >= 45:
                                    return "D7"
                                else:
                                    if score >= 40:
                                        return "E8"
                                    else:
                                        return "F9"
    else:
        return "Invalid Score"

# Function to process all subjects
def waec_grading(english, maths, physics, chemistry, biology, marketing, accounting, economics, geography, history, civics, government):
    results = {
        "English": get_grade(english),
        "Mathematics": get_grade(maths),
        "Physics": get_grade(physics),
        "Chemistry": get_grade(chemistry),
        "Biology": get_grade(biology),
        "Marketing": get_grade(marketing),
        "Accounting": get_grade(accounting),
        "Economics": get_grade(economics),
        "Geography": get_grade(geography),
        "History": get_grade(history),
        "Civic Education": get_grade(civics),
        "Government": get_grade(government)
    }

    # Format results into a readable string
    result_text = "\n".join([f"{subject}: {grade}" for subject, grade in results.items()])
    return result_text

# Gradio Interface
with gr.Blocks(title="WAEC Grading System") as demo:
    gr.Markdown("## ðŸŽ“ WAEC Result Grading System")
    gr.Markdown("Enter the student's scores for each subject below:")

    with gr.Row():
        english = gr.Number(label="English", value=0, precision=0)
        maths = gr.Number(label="Mathematics", value=0, precision=0)

    with gr.Row():
        physics = gr.Number(label="Physics", value=0, precision=0)
        chemistry = gr.Number(label="Chemistry", value=0, precision=0)
        biology = gr.Number(label="Biology", value=0, precision=0)

    with gr.Row():
        marketing = gr.Number(label="Marketing", value=0, precision=0)
        accounting = gr.Number(label="Accounting", value=0, precision=0)
        economics = gr.Number(label="Economics", value=0, precision=0)

    with gr.Row():
        geography = gr.Number(label="Geography", value=0, precision=0)
        history = gr.Number(label="History", value=0, precision=0)
        civics = gr.Number(label="Civic Education", value=0, precision=0)
        government = gr.Number(label="Government", value=0, precision=0)

    submit_btn = gr.Button("Get Grades")
    output = gr.Textbox(label="Student Grades", lines=15)

    submit_btn.click(
        fn=waec_grading,
        inputs=[english, maths, physics, chemistry, biology, marketing, accounting, economics, geography, history, civics, government],
        outputs=output
    )

# Launch the app
if __name__ == "__main__":
    demo.launch()